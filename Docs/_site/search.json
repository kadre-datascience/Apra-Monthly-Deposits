[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "APRA Monthly Banking Statistics",
    "section": "",
    "text": "Data source: APRA Banking Statistics\nimport {Plot} from \"@mkfreeman/plot-tooltip\";\nimport {addTooltips} from \"@mkfreeman/plot-tooltip\";\ndata = FileAttachment(\"../Data/banking_stats.csv\").csv()\nmeasures = data.map(d =&gt; d.Measure).filter(function (e, i, x) {return x.indexOf(e, i+1) === -1;}).sort(); \nsectors = data.map(d =&gt; d.Sector).filter(function (e, i, x) {return x.indexOf(e, i+1) === -1;}).sort();"
  },
  {
    "objectID": "index.html#sector-trends",
    "href": "index.html#sector-trends",
    "title": "APRA Monthly Banking Statistics",
    "section": "Sector Trends",
    "text": "Sector Trends\nSelect the balance sheet time to chart (you can select 1 only), select the sectors or group of authorised deposit taking institution types you are interested in (you can select many).\n\nviewof measure = Inputs.select(measures, \n  {value: \"Total residents assets\", label: \"Financial Measures\", width: 300, multiple: false})\n\n\n\n\n\n\n\nviewof sector = Inputs.select(sectors, \n  {value: \"BIG 4\", label: \"Banking Sectors\", width: 300, multiple: true})\n\n\n\n\n\n\nÂ \n\ndata_filter = data.filter(x =&gt; x.Measure==measure).filter(x =&gt; sector.includes(x.Sector)); \naddTooltips(\n  Plot.plot({\n    height: 800,\n    color: { legend: true },\n    y: { grid: false, type: \"log\", label: \"Value: $million\"},\n    x: { type: \"utc\" }, \n    marks: [\n      Plot.axisX({anchor: \"top\"}),\n      Plot.line(data_filter, \n        { x: \"Period\", y: \"ValueMillion\", stroke: \"Sector\", \n          z: \"Institution\", title: \"Institution\", opacity: 0.5 })\n      ]\n  }), \n  { stroke: \"black\" }\n)"
  },
  {
    "objectID": "index.html#institution-balance-sheet",
    "href": "index.html#institution-balance-sheet",
    "title": "APRA Monthly Banking Statistics",
    "section": "Institution Balance Sheet",
    "text": "Institution Balance Sheet\n\ninstitutions = data_filter.map(d =&gt; d.Institution).filter(function (e, i, x) {return x.indexOf(e, i+1) === -1;}).sort();\n\n\n\n\n\n\n\nviewof institution = Inputs.select(institutions, \n  {value: \"Australia and New Zealand Banking Group Limited\", label: \"Institutions\", width: 300, multiple: false})\n\n\n\n\n\n\n\nlastdate = d3.max(data.map(d =&gt; d.Period));\nmthformat = d3.timeFormat(\"%Y-%m\");\nviewof monthPicked = Inputs.text({\n  type: \"month\",\n  label: \"Table Date\",\n  value: mthformat(new Date(lastdate)),\n  min: \"2002-06\", \n  max: mthformat(new Date(lastdate))\n})\ndatePicked = monthPicked + \"-01\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmthformatlong = d3.timeFormat(\"%B %Y\");\n\n\n\n\n\n\n\nLoans\n\nmd`**Loans** by ${institution} for the month ending ${mthformatlong(new Date(datePicked))}`\n\n\n\n\n\n\n\nInputs.table(\n  data.filter(d =&gt; d.Period===datePicked).filter(d =&gt; d.Institution===institution).filter(d =&gt; d.Measure.match(\"^Loans to\")!=null), \n  {   columns: [ \"Measure\", \"ValueMillion\"] });\n\n\n\n\n\n\n\n\nDeposits\n\nmd`**Deposits** with the ${institution} for the month ending ${mthformatlong(new Date(datePicked))}`\n\n\n\n\n\n\n\nInputs.table(\n  data.filter(d =&gt; d.Period===datePicked).filter(d =&gt; d.Institution===institution).filter(d =&gt; d.Measure.match(\"^Deposits by\")!=null), \n  {   columns: [ \"Measure\", \"ValueMillion\"] });"
  }
]